# Use postgres/example user/password credentials
version: '3.7'

services:
  regnify-api:
    container_name: regnify-api
    image: regnify-api
    restart: unless-stopped
    ports:
      - 8100:8100 # tcp
      - 8101:8101 # ssl
    build: 
      context: ../../
      dockerfile: docker/Dockerfile

    volumes:
      - ./../../:/usr/src/regnify-api

    command: hypercorn --config file:hypercorn/hypercorn_conf.py src.main:app

    environment:
      - MAIL_USERNAME=mailhog-username
      - MAIL_PASSWORD=mailhog-password
      - MAIL_FROM=server@regnify.com
      - MAIL_PORT=1025 # using mailhog
      - MAIL_FROM_NAME=REGNIFY
      - MAIL_SERVER=${REGNIFY_DEV_MAIL_SERVER_IP} # WEB UI => https://dev-mail.regnify.com
      - MAIL_TLS=False
      - MAIL_START_TLS=False
      - MAIL_SSL_TLS=False
      - TEMPLATE_FOLDER='./email-templates'
      - USE_CREDENTIALS=False # for mailhog

      - APP_NAME=REGNIFY HTTP API
      - ADMIN_EMAIL=admin@regnify.com
      - ADMIN_FIRST_NAME=Gabriel
      - ADMIN_LAST_NAME=Doe
      - ADMIN_PASSWORD=worldSecret
      
      - ALLOW_ORIGINS=http://localhost,http://localhost:8000
      - ALLOW_ORIGIN_REGEX=https://.*\\.regnify\\.com|https://.*\\.azurestaticapps\\.net|https://.*\\.netlify\\.app
      
      - DOC_URL=/docs
      - REDOC_URL=/redoc

      - ACCESS_TOKEN_EXPIRE_MINUTES=30 # minute
      - PASSWORD_REQUEST_TOKEN_EXPIRE_MINUTES=15 # 3 seconds
      - SECRET_KEY=435d942a9df98435c01352d03c3fac49a906aac86b5a73c93614b407e945b7a1ad1413868b482aac69d96ecc3e407fa7c21b0ba8f4377be5e014590adb71e7ceebcccb94625cb1bb612f382145c2a57c5a0379954eb3aca449ed
      - SECRET_KEY_FOR_TOKENS=cb94625cb1bb612f382145c2a57c5

      - ALGORITHM=HS256
      
      - DEFAULT_AVATAR_URL=https://via.placeholder.com/500

      - ADMIN_SIGNUP_TOKEN=435d942a9df98435c01352d03c3fac49

      - DB_USER=regnify1234
      - DB_PASSWORD=REGNIFY885
      - DB_HOST=postgres
      - DB_NAME=regnify-db1234
      - DB_PORT=5432

      - RESET_PASSWORD_UI_URL=http://localhost:8080/change-password
      - LOGIN_UI_URL=http://localhost:8080/login

      - OPENAPI_URL=/openapi.json
      - DISPLAY_SCOPES_IN_DOCUMENTATION=True

      - MINIO_HOST=regnify-minio:9000
      - MINIO_ACCESS_KEY=Q3AM3UQ867SPQQA43P2F # for play.min.io
      - MINIO_SECRET_KEY=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG # for play.min.io
      - SECURE_MINIO=False
      
      # - BACKEND_STORAGE_OPTION=MINIO_STORAGE # MINIO_STORAGE or GOOGLE_STORAGE
      - BACKEND_STORAGE_OPTION=GOOGLE_STORAGE # MINIO_STORAGE or GOOGLE_STORAGE

      # * This should only be used for development on your local machine.
      # * Mount a volume on the server to reference these files.
      - KEYFILE=/usr/src/regnify-api/hypercorn/key.pem
      - CERTFILE=/usr/src/regnify-api/hypercorn/cert.pem

      - TCP_PORT=8100
      - SSL_PORT=8101
      - SHOULD_RELOAD=True
      - MAX_WORKERS=1
      - USE_SSL=True
      - USE_TCP=True

      - MAX_SIZE_OF_A_FILE=10

      - GOOGLE_APPLICATION_CREDENTIALS=./gcs_credentials.json
      - BASE_GCS_BUCKET_NAME=regnify-development

      - GOOGLE_APPLICATION_CREDENTIALS_JSON_CONTENT=${GOOGLE_APPLICATION_CREDENTIALS_JSON_CONTENT}
  
    depends_on:
      - postgres
      - mailhog
      - regnify-minio


  regnify-minio:
    container_name: regnify-minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./../../minio-storages:/data
    environment:
      MINIO_ROOT_USER: Q3AM3UQ867SPQQA43P2F
      MINIO_ROOT_PASSWORD: zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
    command: server --console-address ":9001" /data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: regnify-mail-server
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 8025:8025

  postgres:
    image: postgres:15.0-alpine
    container_name: regnify-postgres
    restart: always
    # volumes:
      # - ~/dockerPostgres/regnify:/var/lib/postgresql/data
      
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: regnify1234
      POSTGRES_PASSWORD: REGNIFY885
      POSTGRES_DB: regnify-db1234

networks:
  default:
    external: true
    name: regnify-network